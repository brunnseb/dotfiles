;; **
;; ** Widgets config for EWW
;; ** Created by : @adi1090x
;; **

;; ** Variables ***********************************************************************

;; Time vars
(defpoll TIME :interval "10s" `date +\"%I:%M %p\"`)
(defpoll DATE :interval "10s" `date +\"%A, %B %d\"`)

;; Weather vars
(defpoll ICON :interval "15m" `scripts/weather_info --icon`)
(defpoll TEMP :interval "15m" `scripts/weather_info --temp`)
(defpoll HEX :interval "15m" `scripts/weather_info --hex`)

;; Battery vars
(defpoll BATICON :interval "2m" `scripts/battery --icon`)
(defpoll BATPERC :interval "2m" `scripts/battery --perc`)

;; Brightness vars
(defpoll BRIGHTNESS :interval "1s" `scripts/brightness`)

;; Volume vars
(defpoll VOLICON :interval "1s" `scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `scripts/volume --get`)

;; User
(defvar IMAGE "images/profile.jpg")
(defpoll USER :interval "10m" `whoami`)

;; Notifications
(deflisten notifications :initial "0" "bash ~/.config/eww/arin/scripts/notifications")

;; Workspaces
(deflisten workspaces_0 :initial "[]" "bash ~/.config/eww/arin/scripts/get-workspaces 0")
(deflisten workspaces_1 :initial "[]" "bash ~/.config/eww/arin/scripts/get-workspaces 1")
(deflisten current_workspace_0 :initial "1" "bash ~/.config/eww/arin/scripts/get-active-workspace 0")
(deflisten current_workspace_1 :initial "1" "bash ~/.config/eww/arin/scripts/get-active-workspace 1")

;; Network
(deflisten network :initial "images/icons/system/no-wifi.png" "bash ~/.config/eww/arin/scripts/network")

;; ** Widgets *************************************************************************

;; search
(defwidget search []  
		(box :class "dockbox"     
			(box :orientation "h" :spacing 30 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
				(button :style "background-image: url('images/icons/search.svg');" :class "genicon" :onclick "scripts/widget_search --search")
				(button :style "background-image: url('images/icons/dashboard.svg');" :class "genicon" :onclick "scripts/widget_search --menu"))))

;; apps
(defwidget apps [] 
		(box :class "dockbox" 
			(box :orientation "h" :spacing 15 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/apps/terminal.png');" :class "appicon" :onclick "scripts/widget_apps --tr")
				(button :style "background-image: url('images/icons/apps/firefox.png');" :class "appicon" :onclick "scripts/widget_apps --ff")
				(button :style "background-image: url('images/icons/apps/files.png');" :class "appicon" :onclick "scripts/widget_apps --fm")
				(button :style "background-image: url('images/icons/apps/notes.png');" :class "appicon" :onclick "scripts/widget_apps --ge")
				(button :style "background-image: url('images/icons/apps/discord.png');" :class "appicon" :onclick "scripts/widget_apps --dc")
				(button :style "background-image: url('images/icons/apps/reddit.png');" :class "appicon" :onclick "scripts/widget_apps --rd")
				(button :style "background-image: url('images/icons/apps/telegram.png');" :class "appicon" :onclick "scripts/widget_apps --tg"))))

;; weather
(defwidget weather [] 
		(box :class "dockbox"
			(box :class "clockbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "time" :halign "start" :wrap "true" :limit-width 25 :text TIME)
				(label :class "date" :halign "start" :wrap "true" :limit-width 25 :text DATE))
			(box :class "weatherbox" :orientation "h" :spacing 0 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "weathericon" :style "color: ${HEX};" :text ICON)
				(label :class "weathertemp" :text TEMP))))

;; system
(defwidget system [] 
		(box :class "dockbox" 
			(box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
				(button 
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('images/icons/gmail.png');" :class "trayicon")
							(label :class "mails" :halign "start" :text notifications)))
				(button :onclick "scripts/widget_apps --pow"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${BATICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text BATPERC)))
				(button :onclick "scripts/widget_apps --pow"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('images/icons/brightness.png');" :class "trayicon")
							(label :class "infotext" :halign "start" :text BRIGHTNESS)))
				(button :onclick "scripts/volume --toggle"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${VOLICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text VOLUME)))
				(button :onclick "scripts/widget_apps --nm"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${network}');" :class "trayicon")))
				(button :onclick "sidedar/toggle_sidebar"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${IMAGE}');" :class "face")
							(label :class "infotext" :halign "start" :text USER))))))


(defwidget left_bar []
	(box :class "eww_bar" 
		 :vexpand "false" 
		 :hexpand "false"
		 :space-evenly "false"
		 :spacing 30
(search)
(apps)))

(defwidget center_bar []
	(box :class "eww_bar" 
		 :vexpand "false" 
		 :hexpand "false"
		 :space-evenly "false"
		 :spacing 30
(weather)))

(defwidget right_bar []
	(box :class "eww_bar" 
		 :vexpand "false" 
		 :hexpand "false"
		 :halign "end"
		 :space-evenly "false"
		 :spacing 30
(system)))

(defwidget bar []
	(centerbox :class "top_bar"  
(left_bar)
(center_bar)
(right_bar)))

(defwidget workspaces_0 []
  (eventbox :onscroll "bash ~/.config/eww/arin/scripts/change-active-workspace {} ${current_workspace_0}" :class "dockbox"
    (box :class "workspaces"  :space-evenly false :spacing "5" :orientation "v" :halign "center" :valign "center" 
    (label :text current_workspace_0)
      (for workspace in workspaces_0
        (button :onclick "hyprctl dispatch split-workspace ${workspace.id}" :class "workspace ${workspace.id == current_workspace_0 ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}" "${workspace.id == current_workspace_0 ? "" : workspace.windows > 0 ? "" : " "}")
        )
      )
    )
  )

(defwidget workspaces_1 []
  (eventbox :onscroll "bash ~/.config/eww/arin/scripts/change-active-workspace {} ${current_workspace_1}" :class "dockbox"
    (box :class "workspaces"  :space-evenly false :spacing "5" :orientation "v" :halign "center" :valign "center" 
      (for workspace in workspaces_1
        (button :onclick "hyprctl dispatch split-workspace ${workspace.id}" :class "workspace ${workspace.id == current_workspace_1 ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}" "${workspace.id == current_workspace_1 ? "" : workspace.windows > 0 ? "" : " "}")
        )
      )
    )
  )

;; Bar Widgets ;;
(defwidget ws_bar_0 []
	(box :class "eww_bar" 
		 :orientation "v" 
		 :vexpand "false" 
		 :hexpand "false"
(workspaces_0 )))

(defwidget ws_bar_1 []
	(box :class "eww_bar" 
		 :orientation "v" 
		 :vexpand "false" 
		 :hexpand "false"
(workspaces_1)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow left_bar
	:exclusive true
	:geometry (geometry :x "15px" 
						:y "0" 
						:anchor "left center"
						:width "60px")
	:stacking "fg"
	:windowtype "dock"
	:hexpand "false"
	:vexpand "false"
(ws_bar_0))

(defwindow top_bar 
           :geometry (geometry :x "0px"
                               :y "15px"
                               :width "100%"
                               :height "60px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false 
					 :exclusive true
(bar))


;; (defwindow left_bar_2
;; 	:exclusive true
;; 	:geometry (geometry :x "15px" 
;; 						:y "0" 
;; 						:anchor "left center"
;; 						:width "60px")
;; 	:monitor 1
;; 	:stacking "fg"
;; 	:windowtype "dock"
;; 	:hexpand "false"
;; 	:vexpand "false"
;; (ws_bar_1))
;;
;; (defwindow top_bar_2 
;;            :geometry (geometry :x "0px"
;;                                :y "15px"
;;                                :width "100%"
;;                                :height "60px"
;;                                :anchor "top center")
;;            :stacking "fg"
;;            :reserve (struts :distance "80px" :side "top")
;;            :windowtype "dock"
;;            :wm-ignore false 
;; 					 :exclusive true
;; (bar))
