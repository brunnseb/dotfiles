;; **
;; ** Widgets config for EWW
;; ** Created by : @adi1090x
;; **

;; ** Variables ***********************************************************************


;; Time vars
(defpoll TIME :interval "10s" `date +\"%I:%M %p\"`)
(defpoll DATE :interval "10s" `date +\"%A, %B %d\"`)

;; Weather vars
(defpoll ICON :interval "15m" `scripts/weather_info --icon`)
(defpoll TEMP :interval "15m" `scripts/weather_info --temp`)
(defpoll HEX :interval "15m" `scripts/weather_info --hex`)

;; Battery vars
(defpoll BATICON :interval "2m" `scripts/battery --icon`)
(defpoll BATPERC :interval "2m" `scripts/battery --perc`)

;; Brightness vars
(defpoll BRIGHTNESS :interval "1s" `scripts/brightness`)

;; Volume vars
(defpoll VOLICON :interval "1s" `scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `scripts/volume --get`)

;; User
(defvar IMAGE "images/profile.png")
(defpoll USER :interval "10m" `whoami`)

;; Notifications
(deflisten notifications :initial "0" "bash ~/.config/eww/scripts/notifications")

;; Network
(deflisten network :initial "images/icons/network/no-wifi.png" "bash ~/.config/eww/scripts/network")

;; Keyboard 
(deflisten kbd :initial "US" "bash ~/.config/eww/scripts/keyboard-layout")

;; ** Widgets *************************************************************************

;; search
(defwidget search []  
		(box :class "dockbox"     
			(box :orientation "h" :spacing 30 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
				(button :style "background-image: url('images/icons/search.svg');" :class "genicon" :onclick "scripts/widget_search --search")
				(button :style "background-image: url('images/icons/dashboard.svg');" :class "genicon" :onclick "scripts/widget_search --menu"))))

;; apps
(defwidget apps [] 
		(box :class "dockbox" 
			(box :orientation "h" :spacing 15 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/apps/terminal.png');" :class "appicon" :onclick "scripts/widget_apps --tr")
				(button :style "background-image: url('images/icons/apps/firefox.png');" :class "appicon" :onclick "scripts/widget_apps --ff")
				(button :style "background-image: url('images/icons/apps/files.png');" :class "appicon" :onclick "scripts/widget_apps --fm")
				(button :style "background-image: url('images/icons/apps/notes.png');" :class "appicon" :onclick "scripts/widget_apps --ge")
				(button :style "background-image: url('images/icons/apps/github.png'); opacity: 0.7;" :class "appicon" :onclick "scripts/widget_apps --gh")
				(button :style "background-image: url('images/icons/apps/reddit.png');" :class "appicon" :onclick "scripts/widget_apps --rd"))))

;; weather
(defwidget weather [] 
		(box :class "dockbox"
			(box :class "clockbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "time" :halign "start" :wrap "true" :limit-width 25 :text TIME)
				(label :class "date" :halign "start" :wrap "true" :limit-width 25 :text DATE))
			(box :class "weatherbox" :orientation "h" :spacing 0 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "weathericon" :style "color: ${HEX};" :text ICON)
				(label :class "weathertemp" :text TEMP))))

;; system
(defwidget system [] 
		(box :class "dockbox" :width 530
			(box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
				(button 
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "${notifications > 0 ? 'background-image: url("images/icons/notification/notification.png");' : 'background-image: url("images/icons/notification/notification-empty.png");'}"  :class "trayicon")
							(label :class "mails" :halign "start" :text notifications)))
				(button 
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('images/icons/system/keyboard.png');" :class "trayicon")
							(label :class "infotext" :halign "start" :text kbd)))
				(button :onclick "scripts/widget_apps --pow"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${BATICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text BATPERC)))
				(button :onclick "scripts/widget_apps --pow"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('images/icons/system/brightness.png');" :class "trayicon")
							(label :class "infotext" :halign "start" :text BRIGHTNESS)))
				(button :onclick "scripts/volume --toggle"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${VOLICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text VOLUME)))
				(button :onclick "scripts/widget_apps --nm"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${network}');" :class "trayicon")))
				(button :onclick "sidedar/toggle_sidebar"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${IMAGE}');" :class "face")
							(label :class "infotext user" :halign "start" :text USER))))))


(defwidget left_bar []
	(box :class "eww_bar" 
		 :vexpand "false" 
		 :hexpand "false"
		 :space-evenly "false"
		 :spacing 30
(search)
(apps)))

(defwidget center_bar []
	(box :class "eww_bar" 
		 :vexpand "false" 
		 :hexpand "false"
		 :space-evenly "false"
		 :spacing 30
(weather)))

(defwidget right_bar []
	(box :class "eww_bar" 
		 :vexpand "false" 
		 :hexpand "false"
		 :halign "end"
		 :space-evenly "false"
		 :spacing 30
(system)))

(defwidget bar []
	(centerbox :class "top_bar"  
(left_bar)
(center_bar)
(right_bar)))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow top_bar_0
           :geometry (geometry :x "0px"
                               :y "15px"
                               :width "100%"
                               :height "60px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false 
					 :exclusive true
					 :monitor 0
(bar))


(defwindow top_bar_1 
           :geometry (geometry :x "0px"
                               :y "15px"
                               :width "100%"
                               :height "60px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false 
					 :exclusive true
					 :monitor 1
(bar))

(defwindow top_bar_2 
           :geometry (geometry :x "0px"
                               :y "15px"
                               :width "100%"
                               :height "60px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false 
					 :exclusive true
					 :monitor 2
(bar))
